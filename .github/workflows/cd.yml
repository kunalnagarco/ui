name: Continuous Deployment

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Get node version
        id: node
        run: echo "::set-output name=version::$(node -v)"
      - name: Get node_modules cache
        uses: actions/cache@v4
        id: node_modules
        with:
          path: |
            **/node_modules
          key: ${{ runner.os }}-node_modules-${{ hashFiles('**/yarn.lock') }}-${{ steps.node.outputs.version }}
      - name: Install dependencies
        run: yarn install
      - name: Create build
        run: |
          yarn lerna run build
      - name: NPM Identity
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > .npmrc
      - name: Identity
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"
      - name: Version
        shell: bash
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if [[ "${{ github.ref_name }}" == "main" ]]; then
            yarn lerna version --no-private --conventional-commits --include-merged-tags --yes --create-release github
          else
            yarn lerna version --no-private --conventional-commits --conventional-prerelease --include-merged-tags --yes --create-release github
          fi
      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          yarn lerna publish --yes --summary-file
